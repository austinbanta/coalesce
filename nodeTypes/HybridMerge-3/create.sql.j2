{# Source Stream Location and Name #}

{% set srcStrLoc = sources[0].dependencies[0].node.location.name %}
{% set srcDb = storageLocations | selectattr('name', 'equalto', srcStrLoc) | map(attribute='database') | first %}
{% set srcSch = storageLocations | selectattr('name', 'equalto', srcStrLoc) | map(attribute='schema') | first %}
{% set srcTbl = sources[0].dependencies[0].node.name %}
{% set strName = srcTbl + '_STREAM' %}
{% set fqSrcTblName = '"' + srcDb + '"."' + srcSch + '"."' + srcTbl + '"' %}
{% set fqStrName = '"' + srcDb + '"."' + srcSch + '"."' + strName + '"' %}
{% set strFrom = sources[0].join | replace(srcTbl, strName) %}

{# When Stream has data logic #}
{%- if config.flagSrcStream == true -%} 
    {%- set poll = "WHEN SYSTEM$STREAM_HAS_DATA('" + fqStrName + "')" -%} 
{%- endif -%}

{# Stream Append Behavior #}
{% if config.appendOnly == true %} 
    {% set strAppend = 'APPEND_ONLY = TRUE' %}
{% else %} 
    {% set strAppend = 'APPEND_ONLY = FALSE' %}
{% endif %}

{# Stream Initial Row Behavior #}
{% if config.initialRows == true %} 
    {% set strInitialRows = 'SHOW_INITIAL_ROWS = TRUE' %}
{% else %} 
    {% set strInitialRows = 'SHOW_INITIAL_ROWS = FALSE' %}
{% endif %}

{# Target Table Info #}
{% set tgtStrLoc = node.location.name %}
{% set tgtDb = storageLocations | selectattr('name', 'equalto', tgtStrLoc) | map(attribute='database') | first %}
{% set tgtSch = storageLocations | selectattr('name', 'equalto', tgtStrLoc) | map(attribute='schema') | first %}
{% set tgtTbl = node.name %}
{%- set fqTgtTblName = '"' + tgtDb + '"."' + tgtSch + '"."' + tgtTbl + '"' -%} 

{# Hybrid View Info #}
{# View created in same schema as Target Table #}
{% set tgtView = node.name + '_HYBRID_VIEW'  %}
{%- set fqTgtViewName = '"' + tgtDb + '"."' + tgtSch + '"."' + tgtView + '"' -%} 

{# Task Info #}
{% set taskName = node.name + '_TASK'  %}
{%- set fqTgtTaskName = '"' + tgtDb + '"."' + tgtSch + '"."' + taskName + '"' -%} 

{# Task Type #}
{%- if config.schedulingMode == 'Warehouse Task' -%} 
    {%- set taskType = 'WAREHOUSE = ' + config.whName -%} 
{%- else -%}
    {%- set taskType = 'USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = ' + config.serverlessSize -%} 
{%- endif -%}

{# Schedule Type #}
{%- if config.schedulePeriodOption == 'Minutes' -%} 
    {%- set whenRun = 'SCHEDULE = ' + "'" + config.schedulePeriod + ' MINUTE' + "'" -%} 
{%- else -%}
    {%- set whenRun = 'SCHEDULE = ' + "'" + 'USING CRON ' + config.scheduleCRON %}
{%- endif -%}

{# When Stream has data logic #}
{%- if config.flagSrcStream == true -%} 
    {%- set poll = "WHEN SYSTEM$STREAM_HAS_DATA('" + fqStrName + "')" -%} 
{%- endif -%}


{# Table Column Info #}
{% set tblColid = columns | map(attribute='id') | list %}
{% set tblCol = columns | map(attribute='name') | list %}
{% set tblKey = columns | selectattr('tblKey', 'defined') | map(attribute='name') | list %}
{% set tblKeyColStr = '"'+tblKey | join('", "')+'"' %}
{% set recTS = columns | selectattr('tblChgTS', 'defined') | map(attribute='name') | first %}
{% set tblColHmUpdTs = columns | selectattr('hmUpdTs', 'defined') | map(attribute='name') | first %}
{% set tblDmlCol = columns | selectattr('dmlCol','defined') | map(attribute='name') | first %}
{% set tblColNoUpd = columns | rejectattr('dmlCol','defined') | rejectattr('tblChgTS','defined') | rejectattr('hmUpdTs','defined') | map(attribute='name') | list %}

{# DML Identifier Quoting #}
{% if config.dmlInsert|int("notNumber") == 'notNumber' %} 
    {% set insCode = "'" + config.dmlInsert + "'" %}
    {% set delCode = "'" + config.dmlDelete + "'" %}
    {% set updCode = "'" + config.dmlUpdate + "'" %}
{% else %}
    {% set insCode = config.dmlInsert %}
    {% set delCode = config.dmlDelete %}
    {% set updCode = config.dmlUpdate %}
{% endif %}


{{ stage('Create Stream') }}
CREATE OR REPLACE STREAM {{ fqStrName }}
    ON TABLE {{ fqSrcTblName }}
    {{ strAppend }}
    {{ strInitialRows }}

    
{{ stage('Create Target Table') }}
CREATE OR REPLACE TABLE {{ fqTgtTblName }}
    (
    {%- for col in columns %}
        "{{ col.name }}" {{ col.dataType }}
        {%- if col.description | length > 0 %} COMMENT '{{ col.description }}'{% endif %}
        {%- if not loop.last -%}, {% endif %}
    {%- endfor %}
    )

{{ stage('Create Hybrid View') }}
CREATE OR REPLACE VIEW {{ fqTgtViewName }} (
    {%- for col in columns %}
        "{{ col.name }}"
        {%- if not loop.last -%}, {% endif %}
    {%- endfor %} ) AS
WITH delta AS 
(
SELECT {%- for col in columns %}
            {% if col.name == tblColHmUpdTs %}
                {{ sources[0].columns | selectattr('name','equalto',tblColHmUpdTs) | map(attribute='transform') | first }} as "{{ col.name }}"
            {% else %}
                "{{ col.name }}"
            {% endif %}
            {%- if not loop.last -%}, {% endif %}
       {%- endfor %}
FROM {{ fqSrcTblName }}
CHANGES(information => append_only)
AT(stream => '{{ fqStrName }}' )
QUALIFY 1 = ROW_NUMBER() OVER (PARTITION BY {{ tblKeyColStr }} ORDER BY {{ recTS }} DESC)
)
SELECT {%- for col in columns %}
            {% if col.name == tblColHmUpdTs %}
                {{ sources[0].columns | selectattr('name','equalto',tblColHmUpdTs) | map(attribute='transform') | first }} as "{{ col.name }}"
            {% else %}
                "{{ col.name }}"
            {% endif %}
           {%- if not loop.last -%}, {% endif %}
       {%- endfor %}
FROM {{ fqSrcTblName }} a
WHERE NOT EXISTS (SELECT 1
                  FROM delta d
                  WHERE {%- for col in tblKey %}
                            a."{{ col }}" = d."{{ col }}"
                            {% if not loop.last -%}AND {% endif %}
                        {%- endfor %})
UNION ALL
SELECT {%- for col in columns %}
          "{{ col.name }}"
           {%- if not loop.last -%}, {% endif %}
       {%- endfor %}
FROM delta d

{{ stage('Create Task') }}
CREATE OR REPLACE TASK 
    {{ fqTgtTaskName }} 
    {{ taskType }} 
    {{ whenRun }} 
    {{ poll }} 
AS 
MERGE INTO {{ fqTgtTblName }} a USING (
SELECT {%- for col in columns %}
            {% if col.name == tblColHmUpdTs %}
                {{ sources[0].columns | selectattr('name','equalto',tblColHmUpdTs) | map(attribute='transform') | first }} as "{{ col.name }}"
            {% else %}
                "{{ col.name }}"
            {% endif %}
           {%- if not loop.last -%}, {% endif %}
       {%- endfor %}
FROM {{ fqSrcTblName }}
QUALIFY 1 = row_number() over (partition by {{ tblKeyColStr }} order by {{ recTS }} desc)) d
ON 
{% for col in tblKey -%}
    a."{{ col }}" = d."{{ col }}"
    {% if not loop.last %} AND {% endif %}
{%- endfor -%}
WHEN NOT MATCHED AND d."{{ tblDmlCol }}" = {{ insCode }} then insert
(
{%- for col in columns -%}
    a."{{ col.name }}"
    {%- if not loop.last -%}, {% endif %}
{% endfor %}
)
VALUES (
{%- for col in columns -%}
    d."{{ col.name }}"
    {%- if not loop.last -%}, {% endif %}
{% endfor %}
)

{% if config.capUpdate == true %} 
WHEN NOT MATCHED AND d."{{ tblDmlCol }}" = {{ updCode }} then insert
(
{%- for col in columns -%}
    a."{{ col.name }}"
    {%- if not loop.last -%}, {% endif %}
{% endfor %}
)
VALUES (
{%- for col in columns -%}
    d."{{ col.name }}"
    {%- if not loop.last -%}, {% endif %}
{% endfor %}
)
{% endif %}

WHEN NOT MATCHED AND d."{{ tblDmlCol }}" = {{ delCode }} then insert
(
{%- for col in columns -%}
    a."{{ col.name }}"
    {%- if not loop.last -%}, {% endif %}
{% endfor %}
)
VALUES (
{%- for col in columns -%}
    d."{{ col.name }}"
    {%- if not loop.last -%}, {% endif %}
{% endfor %}
)

{% if config.capUpdate == false %} 
WHEN MATCHED AND d."{{ tblDmlCol }}" = {{ insCode }} then update
SET 
{% for col in columns -%}
    a."{{ col.name }}" = d."{{ col.name }}"
    {%- if not loop.last -%}, {% endif %}
{% endfor %}
{% endif %}

{% if config.capUpdate == true %} 
WHEN MATCHED AND d."{{ tblDmlCol }}" = {{ updCode }} then update
SET 
{% for col in columns -%}
    a."{{ col.name }}" = d."{{ col.name }}"
    {%- if not loop.last -%}, {% endif %}
{% endfor %}
{% endif %}

WHEN MATCHED AND d."{{ tblDmlCol }}" = {{ delCode }} then update
SET 
{% for col in columns -%}
    {% if col.name not in tblColNoUpd %}
        a."{{ col.name }}" = d."{{ col.name }}"
        {%- if not loop.last -%}, {% endif %}
    {% endif %}
{% endfor %}

{{ stage('Resume Task') }}
    ALTER TASK {{ fqTgtTaskName }} RESUME;
